{"abi":[{"type":"function","name":"activateContract","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"currentKing","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"isContractActive","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isKing","inputs":[{"name":"_kingAddress","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"pauseContract","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"renounceKingship","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"transferKingshipTo","inputs":[{"name":"_newKingAddress","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"ContractActivated","inputs":[{"name":"_king","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ContractPaused","inputs":[{"name":"_king","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"KingshipRenounced","inputs":[{"name":"_oldKingAddress","type":"address","indexed":true,"internalType":"address"},{"name":"_zeroAddress","type":"address","indexed":false,"internalType":"address"}],"anonymous":false},{"type":"event","name":"KingshipTransferred","inputs":[{"name":"_oldKingAddress","type":"address","indexed":true,"internalType":"address"},{"name":"_newKingAddress","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"error","name":"AlreadyActive","inputs":[]},{"type":"error","name":"AlreadyPaused","inputs":[]},{"type":"error","name":"InvalidKing","inputs":[{"name":"_invalidAddress","type":"address","internalType":"address"}]},{"type":"error","name":"PausedContract","inputs":[]},{"type":"error","name":"SameKing","inputs":[{"name":"_king","type":"address","internalType":"address"}]},{"type":"error","name":"Unauthorized","inputs":[{"name":"_user","type":"address","internalType":"address"},{"name":"_king","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"activateContract()":"8fda356d","currentKing()":"f5b45714","isContractActive()":"8f5949f9","isKing(address)":"c91c9cfe","pauseContract()":"439766ce","renounceKingship()":"de98d4b3","transferKingshipTo(address)":"859c38de"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyActive\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyPaused\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_invalidAddress\",\"type\":\"address\"}],\"name\":\"InvalidKing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PausedContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_king\",\"type\":\"address\"}],\"name\":\"SameKing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_king\",\"type\":\"address\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_king\",\"type\":\"address\"}],\"name\":\"ContractActivated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_king\",\"type\":\"address\"}],\"name\":\"ContractPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oldKingAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_zeroAddress\",\"type\":\"address\"}],\"name\":\"KingshipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_oldKingAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_newKingAddress\",\"type\":\"address\"}],\"name\":\"KingshipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"activateContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentKing\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isContractActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_kingAddress\",\"type\":\"address\"}],\"name\":\"isKing\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceKingship\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newKingAddress\",\"type\":\"address\"}],\"name\":\"transferKingshipTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Abstract contract, to be inherited by contracts that require king-based and activation-based access control.\",\"errors\":{\"AlreadyActive()\":[{\"details\":\"Thrown when the king tries activating an already active contract.\"}],\"AlreadyPaused()\":[{\"details\":\"Thrown when the king tries pausing an already active contract.\"}],\"InvalidKing(address)\":[{\"details\":\"Thrown when the king tries transferring kingship to the zero or this contract address.\",\"params\":{\"_invalidAddress\":\"The invalid address.\"}}],\"PausedContract()\":[{\"details\":\"Thrown when the contract state is set to Paused.\"}],\"SameKing(address)\":[{\"details\":\"Thrown when the king tries transferring kingship to self.\",\"params\":{\"_king\":\"The king's address.\"}}],\"Unauthorized(address,address)\":[{\"details\":\"Thrown when a user tries performing the king's only operation.\",\"params\":{\"_king\":\"The king's address.\",\"_user\":\"The user's address.\"}}]},\"events\":{\"ContractActivated(address)\":{\"params\":{\"_king\":\"The current king's address.\"}},\"ContractPaused(address)\":{\"params\":{\"_king\":\"The current king's address.\"}},\"KingshipRenounced(address,address)\":{\"params\":{\"_oldKingAddress\":\"The old king's address.\",\"_zeroAddress\":\"Always the zero address (indicates renouncement).\"}},\"KingshipTransferred(address,address)\":{\"params\":{\"_newKingAddress\":\"The new king's address.\",\"_oldKingAddress\":\"The old king's address.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Sets the initial king.          Initializes contract state to Active.\",\"params\":{\"_kingAddress\":\"The king's address.\"}},\"currentKing()\":{\"returns\":{\"_0\":\"The current king's address.\"}},\"isContractActive()\":{\"returns\":{\"_0\":\"`true` if the contract is active, `false` if paused.\"}},\"isKing(address)\":{\"returns\":{\"_0\":\"`true` if address is the king, otherwise `false`.\"}},\"transferKingshipTo(address)\":{\"details\":\"Reverts if the new king is the same, zero or this contract address.\",\"params\":{\"_newKingAddress\":\"The new king's address.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyActive()\":[{\"notice\":\"Thrown for an already active contract.\"}],\"AlreadyPaused()\":[{\"notice\":\"Thrown for an already paused contract.\"}],\"InvalidKing(address)\":[{\"notice\":\"Thrown for invalid new king's address (zero or this contract address).\"}],\"PausedContract()\":[{\"notice\":\"Thrown for paused contract.\"}],\"SameKing(address)\":[{\"notice\":\"Thrown for the same king's address.\"}],\"Unauthorized(address,address)\":[{\"notice\":\"Thrown when the caller is not the king.\"}]},\"events\":{\"ContractActivated(address)\":{\"notice\":\"Emitted when the king activates the contract.\"},\"ContractPaused(address)\":{\"notice\":\"Emitted when the king pauses the contract.\"},\"KingshipRenounced(address,address)\":{\"notice\":\"Emitted when the king renounces kingship.\"},\"KingshipTransferred(address,address)\":{\"notice\":\"Emitted when the king transfers kingship.\"}},\"kind\":\"user\",\"methods\":{\"activateContract()\":{\"notice\":\"Activates the contract.\"},\"currentKing()\":{\"notice\":\"Returns the current king's address.\"},\"isContractActive()\":{\"notice\":\"Checks the current contract state.\"},\"isKing(address)\":{\"notice\":\"Checks if the given address is the current king.\"},\"pauseContract()\":{\"notice\":\"Pauses the contract.\"},\"renounceKingship()\":{\"notice\":\"Renounces Kingship to the zero address.\"},\"transferKingshipTo(address)\":{\"notice\":\"Transfers kingship to a new address.\"}},\"notice\":\"Created on the 23rd of Sept, 2025.         This contract sets the king at deployment (Initial king can be an EOA or a contract address),            restricts access to some functions with the modifier \\\"onlyKing\\\".         Allows kingship transfer and renouncement, pausing and activating the contract via the \\\"whenActive\\\" modifier.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/access/extensions/KingablePausable.sol\":\"KingablePausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/access/extensions/KingablePausable.sol\":{\"keccak256\":\"0x962e4348cb1a78b0d0f97c7c1f1c38152713a316cb0959e640299b8e4477dcb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dfcd198cfaade73119e92790d3605468925ec05eef15bf24819be84c5acd599e\",\"dweb:/ipfs/QmY4E88XA3A55SwuPCX5Uht9ztUpBzv9v3tDKZtUwgYmFL\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"AlreadyActive"},{"inputs":[],"type":"error","name":"AlreadyPaused"},{"inputs":[{"internalType":"address","name":"_invalidAddress","type":"address"}],"type":"error","name":"InvalidKing"},{"inputs":[],"type":"error","name":"PausedContract"},{"inputs":[{"internalType":"address","name":"_king","type":"address"}],"type":"error","name":"SameKing"},{"inputs":[{"internalType":"address","name":"_user","type":"address"},{"internalType":"address","name":"_king","type":"address"}],"type":"error","name":"Unauthorized"},{"inputs":[{"internalType":"address","name":"_king","type":"address","indexed":true}],"type":"event","name":"ContractActivated","anonymous":false},{"inputs":[{"internalType":"address","name":"_king","type":"address","indexed":true}],"type":"event","name":"ContractPaused","anonymous":false},{"inputs":[{"internalType":"address","name":"_oldKingAddress","type":"address","indexed":true},{"internalType":"address","name":"_zeroAddress","type":"address","indexed":false}],"type":"event","name":"KingshipRenounced","anonymous":false},{"inputs":[{"internalType":"address","name":"_oldKingAddress","type":"address","indexed":true},{"internalType":"address","name":"_newKingAddress","type":"address","indexed":true}],"type":"event","name":"KingshipTransferred","anonymous":false},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"activateContract"},{"inputs":[],"stateMutability":"view","type":"function","name":"currentKing","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"isContractActive","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_kingAddress","type":"address"}],"stateMutability":"view","type":"function","name":"isKing","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pauseContract"},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceKingship"},{"inputs":[{"internalType":"address","name":"_newKingAddress","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferKingshipTo"}],"devdoc":{"kind":"dev","methods":{"constructor":{"details":"Sets the initial king.          Initializes contract state to Active.","params":{"_kingAddress":"The king's address."}},"currentKing()":{"returns":{"_0":"The current king's address."}},"isContractActive()":{"returns":{"_0":"`true` if the contract is active, `false` if paused."}},"isKing(address)":{"returns":{"_0":"`true` if address is the king, otherwise `false`."}},"transferKingshipTo(address)":{"details":"Reverts if the new king is the same, zero or this contract address.","params":{"_newKingAddress":"The new king's address."}}},"version":1},"userdoc":{"kind":"user","methods":{"activateContract()":{"notice":"Activates the contract."},"currentKing()":{"notice":"Returns the current king's address."},"isContractActive()":{"notice":"Checks the current contract state."},"isKing(address)":{"notice":"Checks if the given address is the current king."},"pauseContract()":{"notice":"Pauses the contract."},"renounceKingship()":{"notice":"Renounces Kingship to the zero address."},"transferKingshipTo(address)":{"notice":"Transfers kingship to a new address."}},"version":1}},"settings":{"remappings":[],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"contracts/access/extensions/KingablePausable.sol":"KingablePausable"},"evmVersion":"cancun","libraries":{}},"sources":{"contracts/access/extensions/KingablePausable.sol":{"keccak256":"0x962e4348cb1a78b0d0f97c7c1f1c38152713a316cb0959e640299b8e4477dcb5","urls":["bzz-raw://dfcd198cfaade73119e92790d3605468925ec05eef15bf24819be84c5acd599e","dweb:/ipfs/QmY4E88XA3A55SwuPCX5Uht9ztUpBzv9v3tDKZtUwgYmFL"],"license":"MIT"}},"version":1},"id":5}